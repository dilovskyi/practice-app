const {
  arrayIsCorrert,
  fu1,
  fu2,
  fu3,
  fu4,
  fu5,
  fu6,
  fu7,
  fu8,
  fu9,
  fu10,
  fu11,
} = require('../Homework_03')

describe('Проверка валидности массива', () => {
  it('Аргумент массив', () => {
    expect(arrayIsCorrert(2)).toBe('Параметры переданы не корректно')
  })
  it('Массив без элементов', () => {
    expect(arrayIsCorrert([])).toBe('Ваш массив пуст')
  })
  it('Массива существует, он не пуст', () => {
    expect(arrayIsCorrert([1])).toBe('OK')
  })
})

describe('Поиск числа в массиве', () => {
  it('Число отсутсвует', () => {
    expect(fu2([3, 5], 2)).not.toBeTruthy()
  })
  it('Число присутсвует', () => {
    expect(fu2([2, 3, 4], 2)).toBeTruthy()
  })
})

describe('Поиск количесва четных чисел в массиве', () => {
  it('Количество черных чисел', () => {
    expect(fu3([2, 4, 6, 1, 3, 5])).toBe(3)
    expect(fu3([1, 3, 5])).toBe(0)
  })
})

describe('Поиск количесва подходящих чисел', () => {
  it('Количество чисел, которые делятся на 3, но не делятся на 7', () => {
    expect(fu4([12, 6, 5, 8, 9])).toBe(3)
  })
})

describe('Каких чисел в массиве больше', () => {
  it('Делятся на первый элемент массива', () => {
    expect(fu5([1, 2, 4, 5, 6, 7, 5])).toBe(
      'Больше чисел, которые делятся на первый элемент массива',
    )
  })
  it('Делятся на последний элемент массива', () => {
    expect(fu5([5, 4, 3, 2, 1])).toBe(
      'Больше чисел, которые делятся на последний элемент массива',
    )
  })
  it('Равное количество чисел', () => {
    expect(fu5([1, 2, 3, 4, 5, 4, 3, 2, 1])).toBe('Чисел равное количество')
  })
})

it('Вычислить сумму и произведение элементов массива', () => {
  expect(fu6([5, 4, 3, 2, 1])).toEqual([15, 120])
})

it('Вычислить сумму четных чисел в массиве', () => {
  expect(fu7([5, 4, 3, 2, 1])).toBe(6)
})

it('Вычислить сумму нечетных чисел, значение которых не более 11', () => {
  expect(fu8([15, 11, 1, 2])).toBe(12)
})

describe('Сумма чисел массива', () => {
  it('Сумма чисел до первого парного значение', () => {
    expect(fu9([1, 3, 2])).toBe(4)
  })
  it('Если нет четных чисел - сумма всех элементов, кроме крайних', () => {
    expect(fu9([101, 3, 3, 3, 101])).toBe(9)
  })
})

it('Сумма элементов массива, которые находятся на четных индексах', () => {
  expect(fu10([10, 3, 3, 3, 10])).toBe(13)
})

it('Сумма элементов массива на непарных местах, значение которых больше суммы крайних элементов', () => {
  expect(fu11([1, 3, 3, 3, 1])).toBe(6)
  expect(fu11([10, 3, 3, 3, 10])).toBe(0)
})
